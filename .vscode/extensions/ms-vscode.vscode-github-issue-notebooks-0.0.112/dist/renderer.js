/******/ "use strict";
/******/ var __webpack_modules__ = ([
/* 0 */,
/* 1 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ M),
/* harmony export */   "hydrate": () => (/* binding */ O),
/* harmony export */   "createElement": () => (/* binding */ v),
/* harmony export */   "h": () => (/* binding */ v),
/* harmony export */   "Fragment": () => (/* binding */ p),
/* harmony export */   "createRef": () => (/* binding */ y),
/* harmony export */   "isValidElement": () => (/* binding */ l),
/* harmony export */   "Component": () => (/* binding */ d),
/* harmony export */   "cloneElement": () => (/* binding */ S),
/* harmony export */   "createContext": () => (/* binding */ q),
/* harmony export */   "toChildArray": () => (/* binding */ b),
/* harmony export */   "__u": () => (/* binding */ I),
/* harmony export */   "options": () => (/* binding */ n)
/* harmony export */ });
var n,l,u,i,t,r,o,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function s(n,l){for(var u in l)n[u]=l[u];return n}function a(n){var l=n.parentNode;l&&l.removeChild(n)}function v(n,l,u){var i,t=arguments,r={};for(i in l)"key"!==i&&"ref"!==i&&(r[i]=l[i]);if(arguments.length>3)for(u=[u],i=3;i<arguments.length;i++)u.push(t[i]);if(null!=u&&(r.children=u),"function"==typeof n&&null!=n.defaultProps)for(i in n.defaultProps)void 0===r[i]&&(r[i]=n.defaultProps[i]);return h(n,r,l&&l.key,l&&l.ref,null)}function h(l,u,i,t,r){var o={type:l,props:u,key:i,ref:t,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:r};return null==r&&(o.__v=o),n.vnode&&n.vnode(o),o}function y(){return{current:null}}function p(n){return n.children}function d(n,l){this.props=n,this.context=l}function _(n,l){if(null==l)return n.__?_(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return"function"==typeof n.type?_(n):null}function k(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return k(n)}}function w(l){(!l.__d&&(l.__d=!0)&&u.push(l)&&!m.__r++||t!==n.debounceRendering)&&((t=n.debounceRendering)||i)(m)}function m(){for(var n;m.__r=u.length;)n=u.sort(function(n,l){return n.__v.__b-l.__v.__b}),u=[],n.some(function(n){var l,u,i,t,r,o,f;n.__d&&(o=(r=(l=n).__v).__e,(f=l.__P)&&(u=[],(i=s({},r)).__v=i,t=T(f,r,i,l.__n,void 0!==f.ownerSVGElement,null,u,null==o?_(r):o),$(u,r),t!=o&&k(r)))})}function g(n,l,u,i,t,r,o,c,s,v){var y,d,k,w,m,g,b,A=i&&i.__k||e,P=A.length;for(s==f&&(s=null!=o?o[0]:P?_(i,0):null),u.__k=[],y=0;y<l.length;y++)if(null!=(w=u.__k[y]=null==(w=l[y])||"boolean"==typeof w?null:"string"==typeof w||"number"==typeof w?h(null,w,null,null,w):Array.isArray(w)?h(p,{children:w},null,null,null):null!=w.__e||null!=w.__c?h(w.type,w.props,w.key,null,w.__v):w)){if(w.__=u,w.__b=u.__b+1,null===(k=A[y])||k&&w.key==k.key&&w.type===k.type)A[y]=void 0;else for(d=0;d<P;d++){if((k=A[d])&&w.key==k.key&&w.type===k.type){A[d]=void 0;break}k=null}m=T(n,w,k=k||f,t,r,o,c,s,v),(d=w.ref)&&k.ref!=d&&(b||(b=[]),k.ref&&b.push(k.ref,null,w),b.push(d,w.__c||m,w)),null!=m?(null==g&&(g=m),s=x(n,w,k,A,o,m,s),"option"==u.type?n.value="":"function"==typeof u.type&&(u.__d=s)):s&&k.__e==s&&s.parentNode!=n&&(s=_(k))}if(u.__e=g,null!=o&&"function"!=typeof u.type)for(y=o.length;y--;)null!=o[y]&&a(o[y]);for(y=P;y--;)null!=A[y]&&I(A[y],A[y]);if(b)for(y=0;y<b.length;y++)H(b[y],b[++y],b[++y])}function b(n){return null==n||"boolean"==typeof n?[]:Array.isArray(n)?e.concat.apply([],n.map(b)):[n]}function x(n,l,u,i,t,r,o){var f,e,c;if(void 0!==l.__d)f=l.__d,l.__d=void 0;else if(t==u||r!=o||null==r.parentNode)n:if(null==o||o.parentNode!==n)n.appendChild(r),f=null;else{for(e=o,c=0;(e=e.nextSibling)&&c<i.length;c+=2)if(e==r)break n;n.insertBefore(r,o),f=o}return void 0!==f?f:r.nextSibling}function A(n,l,u,i,t){var r;for(r in u)"children"===r||"key"===r||r in l||C(n,r,null,u[r],i);for(r in l)t&&"function"!=typeof l[r]||"children"===r||"key"===r||"value"===r||"checked"===r||u[r]===l[r]||C(n,r,l[r],u[r],i)}function P(n,l,u){"-"===l[0]?n.setProperty(l,u):n[l]="number"==typeof u&&!1===c.test(l)?u+"px":null==u?"":u}function C(n,l,u,i,t){var r,o,f,e,c;if(t?"className"===l&&(l="class"):"class"===l&&(l="className"),"style"===l)if(r=n.style,"string"==typeof u)r.cssText=u;else{if("string"==typeof i&&(r.cssText="",i=null),i)for(e in i)u&&e in u||P(r,e,"");if(u)for(c in u)i&&u[c]===i[c]||P(r,c,u[c])}else"o"===l[0]&&"n"===l[1]?(o=l!==(l=l.replace(/Capture$/,"")),f=l.toLowerCase(),l=(f in n?f:l).slice(2),u?(i||n.addEventListener(l,N,o),(n.l||(n.l={}))[l]=u):n.removeEventListener(l,N,o)):"list"!==l&&"tagName"!==l&&"form"!==l&&"type"!==l&&"size"!==l&&!t&&l in n?n[l]=null==u?"":u:"function"!=typeof u&&"dangerouslySetInnerHTML"!==l&&(l!==(l=l.replace(/^xlink:?/,""))?null==u||!1===u?n.removeAttributeNS("http://www.w3.org/1999/xlink",l.toLowerCase()):n.setAttributeNS("http://www.w3.org/1999/xlink",l.toLowerCase(),u):null==u||!1===u&&!/^ar/.test(l)?n.removeAttribute(l):n.setAttribute(l,u))}function N(l){this.l[l.type](n.event?n.event(l):l)}function z(n,l,u){var i,t;for(i=0;i<n.__k.length;i++)(t=n.__k[i])&&(t.__=n,t.__e&&("function"==typeof t.type&&t.__k.length>1&&z(t,l,u),l=x(u,t,t,n.__k,null,t.__e,l),"function"==typeof n.type&&(n.__d=l)))}function T(l,u,i,t,r,o,f,e,c){var a,v,h,y,_,k,w,m,b,x,A,P=u.type;if(void 0!==u.constructor)return null;(a=n.__b)&&a(u);try{n:if("function"==typeof P){if(m=u.props,b=(a=P.contextType)&&t[a.__c],x=a?b?b.props.value:a.__:t,i.__c?w=(v=u.__c=i.__c).__=v.__E:("prototype"in P&&P.prototype.render?u.__c=v=new P(m,x):(u.__c=v=new d(m,x),v.constructor=P,v.render=L),b&&b.sub(v),v.props=m,v.state||(v.state={}),v.context=x,v.__n=t,h=v.__d=!0,v.__h=[]),null==v.__s&&(v.__s=v.state),null!=P.getDerivedStateFromProps&&(v.__s==v.state&&(v.__s=s({},v.__s)),s(v.__s,P.getDerivedStateFromProps(m,v.__s))),y=v.props,_=v.state,h)null==P.getDerivedStateFromProps&&null!=v.componentWillMount&&v.componentWillMount(),null!=v.componentDidMount&&v.__h.push(v.componentDidMount);else{if(null==P.getDerivedStateFromProps&&m!==y&&null!=v.componentWillReceiveProps&&v.componentWillReceiveProps(m,x),!v.__e&&null!=v.shouldComponentUpdate&&!1===v.shouldComponentUpdate(m,v.__s,x)||u.__v===i.__v){v.props=m,v.state=v.__s,u.__v!==i.__v&&(v.__d=!1),v.__v=u,u.__e=i.__e,u.__k=i.__k,v.__h.length&&f.push(v),z(u,e,l);break n}null!=v.componentWillUpdate&&v.componentWillUpdate(m,v.__s,x),null!=v.componentDidUpdate&&v.__h.push(function(){v.componentDidUpdate(y,_,k)})}v.context=x,v.props=m,v.state=v.__s,(a=n.__r)&&a(u),v.__d=!1,v.__v=u,v.__P=l,a=v.render(v.props,v.state,v.context),v.state=v.__s,null!=v.getChildContext&&(t=s(s({},t),v.getChildContext())),h||null==v.getSnapshotBeforeUpdate||(k=v.getSnapshotBeforeUpdate(y,_)),A=null!=a&&a.type==p&&null==a.key?a.props.children:a,g(l,Array.isArray(A)?A:[A],u,i,t,r,o,f,e,c),v.base=u.__e,v.__h.length&&f.push(v),w&&(v.__E=v.__=null),v.__e=!1}else null==o&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=j(i.__e,u,i,t,r,o,f,c);(a=n.diffed)&&a(u)}catch(l){u.__v=null,n.__e(l,u,i)}return u.__e}function $(l,u){n.__c&&n.__c(u,l),l.some(function(u){try{l=u.__h,u.__h=[],l.some(function(n){n.call(u)})}catch(l){n.__e(l,u.__v)}})}function j(n,l,u,i,t,r,o,c){var s,a,v,h,y,p=u.props,d=l.props;if(t="svg"===l.type||t,null!=r)for(s=0;s<r.length;s++)if(null!=(a=r[s])&&((null===l.type?3===a.nodeType:a.localName===l.type)||n==a)){n=a,r[s]=null;break}if(null==n){if(null===l.type)return document.createTextNode(d);n=t?document.createElementNS("http://www.w3.org/2000/svg",l.type):document.createElement(l.type,d.is&&{is:d.is}),r=null,c=!1}if(null===l.type)p!==d&&n.data!=d&&(n.data=d);else{if(null!=r&&(r=e.slice.call(n.childNodes)),v=(p=u.props||f).dangerouslySetInnerHTML,h=d.dangerouslySetInnerHTML,!c){if(null!=r)for(p={},y=0;y<n.attributes.length;y++)p[n.attributes[y].name]=n.attributes[y].value;(h||v)&&(h&&v&&h.__html==v.__html||(n.innerHTML=h&&h.__html||""))}A(n,d,p,t,c),h?l.__k=[]:(s=l.props.children,g(n,Array.isArray(s)?s:[s],l,u,i,"foreignObject"!==l.type&&t,r,o,f,c)),c||("value"in d&&void 0!==(s=d.value)&&s!==n.value&&C(n,"value",s,p.value,!1),"checked"in d&&void 0!==(s=d.checked)&&s!==n.checked&&C(n,"checked",s,p.checked,!1))}return n}function H(l,u,i){try{"function"==typeof l?l(u):l.current=u}catch(l){n.__e(l,i)}}function I(l,u,i){var t,r,o;if(n.unmount&&n.unmount(l),(t=l.ref)&&(t.current&&t.current!==l.__e||H(t,null,u)),i||"function"==typeof l.type||(i=null!=(r=l.__e)),l.__e=l.__d=void 0,null!=(t=l.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(l){n.__e(l,u)}t.base=t.__P=null}if(t=l.__k)for(o=0;o<t.length;o++)t[o]&&I(t[o],u,i);null!=r&&a(r)}function L(n,l,u){return this.constructor(n,u)}function M(l,u,i){var t,o,c;n.__&&n.__(l,u),o=(t=i===r)?null:i&&i.__k||u.__k,l=v(p,null,[l]),c=[],T(u,(t?u:i||u).__k=l,o||f,f,void 0!==u.ownerSVGElement,i&&!t?[i]:o?null:u.childNodes.length?e.slice.call(u.childNodes):null,c,i||f,t),$(c,l)}function O(n,l){M(n,l,r)}function S(n,l){var u,i;for(i in l=s(s({},n.props),l),arguments.length>2&&(l.children=e.slice.call(arguments,2)),u={},l)"key"!==i&&"ref"!==i&&(u[i]=l[i]);return h(n.type,u,l.key||n.key,l.ref||n.ref,null)}function q(n){var l={},u={__c:"__cC"+o++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var i,t=this;return this.getChildContext||(i=[],this.getChildContext=function(){return l[u.__c]=t,l},this.shouldComponentUpdate=function(n){t.props.value!==n.value&&i.some(function(l){l.context=n.value,w(l)})},this.sub=function(n){i.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){i.splice(i.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Consumer.contextType=u,u.Provider.__=u,u}n={__e:function(n,l){for(var u,i;l=l.__;)if((u=l.__c)&&!u.__)try{if(u.constructor&&null!=u.constructor.getDerivedStateFromError&&(i=!0,u.setState(u.constructor.getDerivedStateFromError(n))),null!=u.componentDidCatch&&(i=!0,u.componentDidCatch(n)),i)return w(u.__E=u)}catch(l){n=l}throw n}},l=function(n){return null!=n&&void 0===n.constructor},d.prototype.setState=function(n,l){var u;u=this.__s!==this.state?this.__s:this.__s=s({},this.state),"function"==typeof n&&(n=n(u,this.props)),n&&s(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),w(this))},d.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),w(this))},d.prototype.render=p,u=[],i="function"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,m.__r=0,r=f,o=0;
//# sourceMappingURL=preact.module.js.map


/***/ }),
/* 2 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AllItems": () => (/* binding */ AllItems)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var preact_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _common_emoji__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);
/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
/*---------------------------------------------------------
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *--------------------------------------------------------*/




const defaultMaxCount = 13;
const AllItems = ({ items: rawItems }) => {
    const [hidden, setHidden] = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useState)([]);
    const items = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {
        const seen = new Set();
        return rawItems.filter(item => {
            if (hidden.includes(item.id)) {
                return false;
            }
            if (seen.has(item.url)) {
                return false;
            }
            seen.add(item.url);
            return true;
        });
    }, [rawItems, hidden]);
    // reset hidden items running a new or different query
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => setHidden([]), [rawItems]);
    const hasManyRepos = items.some(item => item.repository_url !== items[0].repository_url);
    const renderItem = (item) => (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(Item, { key: item.id, item: item, hide: () => setHidden([...hidden, item.id]), showRepo: hasManyRepos });
    if (items.length <= defaultMaxCount) {
        return (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, items.map(renderItem));
    }
    const [collapsed, setCollapsed] = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useState)(true);
    const di = collapsed ? items.slice(0, defaultMaxCount) : items;
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", { className: 'large' },
        di.map(renderItem),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", { className: "collapse" },
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(CollapseButton, { n: items.length, setCollapsed: setCollapsed, collapsed: collapsed })));
};
const Item = ({ item, showRepo, hide }) => {
    var _a;
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", { className: 'item-row' },
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", { className: 'item-main' },
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", { className: "item-state" }, item.pull_request ? (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(_icons__WEBPACK_IMPORTED_MODULE_3__.PRIcon, null) : item.closed_at ? (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(_icons__WEBPACK_IMPORTED_MODULE_3__.IssueClosedIcon, null) : (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(_icons__WEBPACK_IMPORTED_MODULE_3__.IssueOpenIcon, null)),
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", { style: { flex: 'auto', flexBasis: 0 } },
                showRepo && (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(RepoLabel, { url: item.repository_url }),
                (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("a", { href: item.html_url, className: "title" }, item.title),
                item.labels.map(label => (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(Label, { label: label, key: label.id }))),
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", { className: "user" }, (_a = item.assignees) === null || _a === void 0 ? void 0 : _a.map(user => (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(Avatar, { user: user, key: user.id })))),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", { className: "status" },
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("span", null,
                "#",
                item.number,
                " opened ",
                new Date(item.created_at).toLocaleDateString(),
                " by ",
                item.user.login),
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("span", { style: { flex: 1 } }),
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("ul", { className: 'actions' },
                (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("li", null,
                    (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("a", { role: 'button', onClick: hide }, "Hide")))));
};
const RepoLabel = ({ url }) => {
    const match = /.+\/(.+\/.+)$/.exec(url);
    return match ? (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("a", { href: `https://github.com/${match[1]}`, className: "repo title" }, match[1]) : null;
};
const Label = ({ label }) => (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("span", { className: "label", key: label.id, style: { backgroundColor: `#${label.color}` } },
    (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("a", { style: { color: getContrastColor(label.color) } }, (0,_common_emoji__WEBPACK_IMPORTED_MODULE_2__.withEmoji)(label.name)));
const Avatar = ({ user }) => (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("a", { key: user.id, href: user.html_url },
    (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("img", { src: user.avatar_url, width: "20", height: "20", alt: `@${user.login}` }));
const CollapseButton = ({ collapsed, setCollapsed, n }) => collapsed
    ? (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("span", { className: "more", onClick: () => setCollapsed(false) },
        "\u25BC Show ",
        n - defaultMaxCount,
        " More")
    : (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("span", { className: "less", onClick: () => setCollapsed(true) }, "\u25B2 Show Less");
function getContrastColor(color) {
    // Color algorithm from https://stackoverflow.com/questions/1855884/determine-font-color-based-on-background-color
    const r = Number.parseInt(color.substr(0, 2), 16);
    const g = Number.parseInt(color.substr(2, 2), 16);
    const b = Number.parseInt(color.substr(4, 2), 16);
    return ((0.299 * r + 0.587 * g + 0.114 * b) / 255) > 0.5 ? 'black' : 'white';
}


/***/ }),
/* 3 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useState": () => (/* binding */ m),
/* harmony export */   "useReducer": () => (/* binding */ p),
/* harmony export */   "useEffect": () => (/* binding */ y),
/* harmony export */   "useLayoutEffect": () => (/* binding */ l),
/* harmony export */   "useRef": () => (/* binding */ h),
/* harmony export */   "useImperativeHandle": () => (/* binding */ s),
/* harmony export */   "useMemo": () => (/* binding */ _),
/* harmony export */   "useCallback": () => (/* binding */ A),
/* harmony export */   "useContext": () => (/* binding */ F),
/* harmony export */   "useDebugValue": () => (/* binding */ T),
/* harmony export */   "useErrorBoundary": () => (/* binding */ d)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
var t,u,r,o=0,i=[],c=preact__WEBPACK_IMPORTED_MODULE_0__.options.__r,f=preact__WEBPACK_IMPORTED_MODULE_0__.options.diffed,e=preact__WEBPACK_IMPORTED_MODULE_0__.options.__c,a=preact__WEBPACK_IMPORTED_MODULE_0__.options.unmount;function v(t,r){preact__WEBPACK_IMPORTED_MODULE_0__.options.__h&&preact__WEBPACK_IMPORTED_MODULE_0__.options.__h(u,t,o||r),o=0;var i=u.__H||(u.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({}),i.__[t]}function m(n){return o=1,p(k,n)}function p(n,r,o){var i=v(t++,2);return i.t=n,i.__c||(i.__c=u,i.__=[o?o(r):k(void 0,r),function(n){var t=i.t(i.__[0],n);i.__[0]!==t&&(i.__=[t,i.__[1]],i.__c.setState({}))}]),i.__}function y(r,o){var i=v(t++,3);!preact__WEBPACK_IMPORTED_MODULE_0__.options.__s&&j(i.__H,o)&&(i.__=r,i.__H=o,u.__H.__h.push(i))}function l(r,o){var i=v(t++,4);!preact__WEBPACK_IMPORTED_MODULE_0__.options.__s&&j(i.__H,o)&&(i.__=r,i.__H=o,u.__h.push(i))}function h(n){return o=5,_(function(){return{current:n}},[])}function s(n,t,u){o=6,l(function(){"function"==typeof n?n(t()):n&&(n.current=t())},null==u?u:u.concat(n))}function _(n,u){var r=v(t++,7);return j(r.__H,u)?(r.__H=u,r.__h=n,r.__=n()):r.__}function A(n,t){return o=8,_(function(){return n},t)}function F(n){var r=u.context[n.__c],o=v(t++,9);return o.__c=n,r?(null==o.__&&(o.__=!0,r.sub(u)),r.props.value):n.__}function T(t,u){preact__WEBPACK_IMPORTED_MODULE_0__.options.useDebugValue&&preact__WEBPACK_IMPORTED_MODULE_0__.options.useDebugValue(u?u(t):t)}function d(n){var r=v(t++,10),o=m();return r.__=n,u.componentDidCatch||(u.componentDidCatch=function(n){r.__&&r.__(n),o[1](n)}),[o[0],function(){o[1](void 0)}]}function q(){i.some(function(t){if(t.__P)try{t.__H.__h.forEach(b),t.__H.__h.forEach(g),t.__H.__h=[]}catch(u){return t.__H.__h=[],preact__WEBPACK_IMPORTED_MODULE_0__.options.__e(u,t.__v),!0}}),i=[]}preact__WEBPACK_IMPORTED_MODULE_0__.options.__r=function(n){c&&c(n),t=0;var r=(u=n.__c).__H;r&&(r.__h.forEach(b),r.__h.forEach(g),r.__h=[])},preact__WEBPACK_IMPORTED_MODULE_0__.options.diffed=function(t){f&&f(t);var u=t.__c;u&&u.__H&&u.__H.__h.length&&(1!==i.push(u)&&r===preact__WEBPACK_IMPORTED_MODULE_0__.options.requestAnimationFrame||((r=preact__WEBPACK_IMPORTED_MODULE_0__.options.requestAnimationFrame)||function(n){var t,u=function(){clearTimeout(r),x&&cancelAnimationFrame(t),setTimeout(n)},r=setTimeout(u,100);x&&(t=requestAnimationFrame(u))})(q))},preact__WEBPACK_IMPORTED_MODULE_0__.options.__c=function(t,u){u.some(function(t){try{t.__h.forEach(b),t.__h=t.__h.filter(function(n){return!n.__||g(n)})}catch(r){u.some(function(n){n.__h&&(n.__h=[])}),u=[],preact__WEBPACK_IMPORTED_MODULE_0__.options.__e(r,t.__v)}}),e&&e(t,u)},preact__WEBPACK_IMPORTED_MODULE_0__.options.unmount=function(t){a&&a(t);var u=t.__c;if(u&&u.__H)try{u.__H.__.forEach(b)}catch(t){preact__WEBPACK_IMPORTED_MODULE_0__.options.__e(t,u.__v)}};var x="function"==typeof requestAnimationFrame;function b(n){"function"==typeof n.u&&n.u()}function g(n){n.u=n.__()}function j(n,t){return!n||t.some(function(t,u){return t!==n[u]})}function k(n,t){return"function"==typeof t?t(n):t}
//# sourceMappingURL=hooks.module.js.map


/***/ }),
/* 4 */
/***/ ((__unused_webpack_module, exports) => {


/*---------------------------------------------------------
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *--------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.withEmoji = void 0;
const _emojiMap = JSON.parse(`{
  "100": "💯",
  "1234": "🔢",
  "grinning": "😀",
  "smiley": "😃",
  "smile": "😄",
  "grin": "😁",
  "laughing": "😆",
  "satisfied": "😆",
  "sweat_smile": "😅",
  "rofl": "🤣",
  "joy": "😂",
  "slightly_smiling_face": "🙂",
  "upside_down_face": "🙃",
  "wink": "😉",
  "blush": "😊",
  "innocent": "😇",
  "smiling_face_with_three_hearts": "🥰",
  "heart_eyes": "😍",
  "star_struck": "🤩",
  "kissing_heart": "😘",
  "kissing": "😗",
  "relaxed": "☺️",
  "kissing_closed_eyes": "😚",
  "kissing_smiling_eyes": "😙",
  "smiling_face_with_tear": "🥲",
  "yum": "😋",
  "stuck_out_tongue": "😛",
  "stuck_out_tongue_winking_eye": "😜",
  "zany_face": "🤪",
  "stuck_out_tongue_closed_eyes": "😝",
  "money_mouth_face": "🤑",
  "hugs": "🤗",
  "hand_over_mouth": "🤭",
  "shushing_face": "🤫",
  "thinking": "🤔",
  "zipper_mouth_face": "🤐",
  "raised_eyebrow": "🤨",
  "neutral_face": "😐",
  "expressionless": "😑",
  "no_mouth": "😶",
  "smirk": "😏",
  "unamused": "😒",
  "roll_eyes": "🙄",
  "grimacing": "😬",
  "lying_face": "🤥",
  "relieved": "😌",
  "pensive": "😔",
  "sleepy": "😪",
  "drooling_face": "🤤",
  "sleeping": "😴",
  "mask": "😷",
  "face_with_thermometer": "🤒",
  "face_with_head_bandage": "🤕",
  "nauseated_face": "🤢",
  "vomiting_face": "🤮",
  "sneezing_face": "🤧",
  "hot_face": "🥵",
  "cold_face": "🥶",
  "woozy_face": "🥴",
  "dizzy_face": "😵",
  "exploding_head": "🤯",
  "cowboy_hat_face": "🤠",
  "partying_face": "🥳",
  "disguised_face": "🥸",
  "sunglasses": "😎",
  "nerd_face": "🤓",
  "monocle_face": "🧐",
  "confused": "😕",
  "worried": "😟",
  "slightly_frowning_face": "🙁",
  "frowning_face": "☹️",
  "open_mouth": "😮",
  "hushed": "😯",
  "astonished": "😲",
  "flushed": "😳",
  "pleading_face": "🥺",
  "frowning": "😦",
  "anguished": "😧",
  "fearful": "😨",
  "cold_sweat": "😰",
  "disappointed_relieved": "😥",
  "cry": "😢",
  "sob": "😭",
  "scream": "😱",
  "confounded": "😖",
  "persevere": "😣",
  "disappointed": "😞",
  "sweat": "😓",
  "weary": "😩",
  "tired_face": "😫",
  "yawning_face": "🥱",
  "triumph": "😤",
  "rage": "😡",
  "pout": "😡",
  "angry": "😠",
  "cursing_face": "🤬",
  "smiling_imp": "😈",
  "imp": "👿",
  "skull": "💀",
  "skull_and_crossbones": "☠️",
  "hankey": "💩",
  "poop": "💩",
  "shit": "💩",
  "clown_face": "🤡",
  "japanese_ogre": "👹",
  "japanese_goblin": "👺",
  "ghost": "👻",
  "alien": "👽",
  "space_invader": "👾",
  "robot": "🤖",
  "smiley_cat": "😺",
  "smile_cat": "😸",
  "joy_cat": "😹",
  "heart_eyes_cat": "😻",
  "smirk_cat": "😼",
  "kissing_cat": "😽",
  "scream_cat": "🙀",
  "crying_cat_face": "😿",
  "pouting_cat": "😾",
  "see_no_evil": "🙈",
  "hear_no_evil": "🙉",
  "speak_no_evil": "🙊",
  "kiss": "💋",
  "love_letter": "💌",
  "cupid": "💘",
  "gift_heart": "💝",
  "sparkling_heart": "💖",
  "heartpulse": "💗",
  "heartbeat": "💓",
  "revolving_hearts": "💞",
  "two_hearts": "💕",
  "heart_decoration": "💟",
  "heavy_heart_exclamation": "❣️",
  "broken_heart": "💔",
  "heart": "❤️",
  "orange_heart": "🧡",
  "yellow_heart": "💛",
  "green_heart": "💚",
  "blue_heart": "💙",
  "purple_heart": "💜",
  "brown_heart": "🤎",
  "black_heart": "🖤",
  "white_heart": "🤍",
  "anger": "💢",
  "boom": "💥",
  "collision": "💥",
  "dizzy": "💫",
  "sweat_drops": "💦",
  "dash": "💨",
  "hole": "🕳️",
  "bomb": "💣",
  "speech_balloon": "💬",
  "eye_speech_bubble": "👁️‍🗨️",
  "left_speech_bubble": "🗨️",
  "right_anger_bubble": "🗯️",
  "thought_balloon": "💭",
  "zzz": "💤",
  "wave": "👋",
  "raised_back_of_hand": "🤚",
  "raised_hand_with_fingers_splayed": "🖐️",
  "hand": "✋",
  "raised_hand": "✋",
  "vulcan_salute": "🖖",
  "ok_hand": "👌",
  "pinched_fingers": "🤌",
  "pinching_hand": "🤏",
  "v": "✌️",
  "crossed_fingers": "🤞",
  "love_you_gesture": "🤟",
  "metal": "🤘",
  "call_me_hand": "🤙",
  "point_left": "👈",
  "point_right": "👉",
  "point_up_2": "👆",
  "middle_finger": "🖕",
  "fu": "🖕",
  "point_down": "👇",
  "point_up": "☝️",
  "+1": "👍",
  "thumbsup": "👍",
  "-1": "👎",
  "thumbsdown": "👎",
  "fist_raised": "✊",
  "fist": "✊",
  "fist_oncoming": "👊",
  "facepunch": "👊",
  "punch": "👊",
  "fist_left": "🤛",
  "fist_right": "🤜",
  "clap": "👏",
  "raised_hands": "🙌",
  "open_hands": "👐",
  "palms_up_together": "🤲",
  "handshake": "🤝",
  "pray": "🙏",
  "writing_hand": "✍️",
  "nail_care": "💅",
  "selfie": "🤳",
  "muscle": "💪",
  "mechanical_arm": "🦾",
  "mechanical_leg": "🦿",
  "leg": "🦵",
  "foot": "🦶",
  "ear": "👂",
  "ear_with_hearing_aid": "🦻",
  "nose": "👃",
  "brain": "🧠",
  "anatomical_heart": "🫀",
  "lungs": "🫁",
  "tooth": "🦷",
  "bone": "🦴",
  "eyes": "👀",
  "eye": "👁️",
  "tongue": "👅",
  "lips": "👄",
  "baby": "👶",
  "child": "🧒",
  "boy": "👦",
  "girl": "👧",
  "adult": "🧑",
  "blond_haired_person": "👱",
  "man": "👨",
  "bearded_person": "🧔",
  "red_haired_man": "👨‍🦰",
  "curly_haired_man": "👨‍🦱",
  "white_haired_man": "👨‍🦳",
  "bald_man": "👨‍🦲",
  "woman": "👩",
  "red_haired_woman": "👩‍🦰",
  "person_red_hair": "🧑‍🦰",
  "curly_haired_woman": "👩‍🦱",
  "person_curly_hair": "🧑‍🦱",
  "white_haired_woman": "👩‍🦳",
  "person_white_hair": "🧑‍🦳",
  "bald_woman": "👩‍🦲",
  "person_bald": "🧑‍🦲",
  "blond_haired_woman": "👱‍♀️",
  "blonde_woman": "👱‍♀️",
  "blond_haired_man": "👱‍♂️",
  "older_adult": "🧓",
  "older_man": "👴",
  "older_woman": "👵",
  "frowning_person": "🙍",
  "frowning_man": "🙍‍♂️",
  "frowning_woman": "🙍‍♀️",
  "pouting_face": "🙎",
  "pouting_man": "🙎‍♂️",
  "pouting_woman": "🙎‍♀️",
  "no_good": "🙅",
  "no_good_man": "🙅‍♂️",
  "ng_man": "🙅‍♂️",
  "no_good_woman": "🙅‍♀️",
  "ng_woman": "🙅‍♀️",
  "ok_person": "🙆",
  "ok_man": "🙆‍♂️",
  "ok_woman": "🙆‍♀️",
  "tipping_hand_person": "💁",
  "information_desk_person": "💁",
  "tipping_hand_man": "💁‍♂️",
  "sassy_man": "💁‍♂️",
  "tipping_hand_woman": "💁‍♀️",
  "sassy_woman": "💁‍♀️",
  "raising_hand": "🙋",
  "raising_hand_man": "🙋‍♂️",
  "raising_hand_woman": "🙋‍♀️",
  "deaf_person": "🧏",
  "deaf_man": "🧏‍♂️",
  "deaf_woman": "🧏‍♀️",
  "bow": "🙇",
  "bowing_man": "🙇‍♂️",
  "bowing_woman": "🙇‍♀️",
  "facepalm": "🤦",
  "man_facepalming": "🤦‍♂️",
  "woman_facepalming": "🤦‍♀️",
  "shrug": "🤷",
  "man_shrugging": "🤷‍♂️",
  "woman_shrugging": "🤷‍♀️",
  "health_worker": "🧑‍⚕️",
  "man_health_worker": "👨‍⚕️",
  "woman_health_worker": "👩‍⚕️",
  "student": "🧑‍🎓",
  "man_student": "👨‍🎓",
  "woman_student": "👩‍🎓",
  "teacher": "🧑‍🏫",
  "man_teacher": "👨‍🏫",
  "woman_teacher": "👩‍🏫",
  "judge": "🧑‍⚖️",
  "man_judge": "👨‍⚖️",
  "woman_judge": "👩‍⚖️",
  "farmer": "🧑‍🌾",
  "man_farmer": "👨‍🌾",
  "woman_farmer": "👩‍🌾",
  "cook": "🧑‍🍳",
  "man_cook": "👨‍🍳",
  "woman_cook": "👩‍🍳",
  "mechanic": "🧑‍🔧",
  "man_mechanic": "👨‍🔧",
  "woman_mechanic": "👩‍🔧",
  "factory_worker": "🧑‍🏭",
  "man_factory_worker": "👨‍🏭",
  "woman_factory_worker": "👩‍🏭",
  "office_worker": "🧑‍💼",
  "man_office_worker": "👨‍💼",
  "woman_office_worker": "👩‍💼",
  "scientist": "🧑‍🔬",
  "man_scientist": "👨‍🔬",
  "woman_scientist": "👩‍🔬",
  "technologist": "🧑‍💻",
  "man_technologist": "👨‍💻",
  "woman_technologist": "👩‍💻",
  "singer": "🧑‍🎤",
  "man_singer": "👨‍🎤",
  "woman_singer": "👩‍🎤",
  "artist": "🧑‍🎨",
  "man_artist": "👨‍🎨",
  "woman_artist": "👩‍🎨",
  "pilot": "🧑‍✈️",
  "man_pilot": "👨‍✈️",
  "woman_pilot": "👩‍✈️",
  "astronaut": "🧑‍🚀",
  "man_astronaut": "👨‍🚀",
  "woman_astronaut": "👩‍🚀",
  "firefighter": "🧑‍🚒",
  "man_firefighter": "👨‍🚒",
  "woman_firefighter": "👩‍🚒",
  "police_officer": "👮",
  "cop": "👮",
  "policeman": "👮‍♂️",
  "policewoman": "👮‍♀️",
  "detective": "🕵️",
  "male_detective": "🕵️‍♂️",
  "female_detective": "🕵️‍♀️",
  "guard": "💂",
  "guardsman": "💂‍♂️",
  "guardswoman": "💂‍♀️",
  "ninja": "🥷",
  "construction_worker": "👷",
  "construction_worker_man": "👷‍♂️",
  "construction_worker_woman": "👷‍♀️",
  "prince": "🤴",
  "princess": "👸",
  "person_with_turban": "👳",
  "man_with_turban": "👳‍♂️",
  "woman_with_turban": "👳‍♀️",
  "man_with_gua_pi_mao": "👲",
  "woman_with_headscarf": "🧕",
  "person_in_tuxedo": "🤵",
  "man_in_tuxedo": "🤵‍♂️",
  "woman_in_tuxedo": "🤵‍♀️",
  "person_with_veil": "👰",
  "man_with_veil": "👰‍♂️",
  "woman_with_veil": "👰‍♀️",
  "bride_with_veil": "👰‍♀️",
  "pregnant_woman": "🤰",
  "breast_feeding": "🤱",
  "woman_feeding_baby": "👩‍🍼",
  "man_feeding_baby": "👨‍🍼",
  "person_feeding_baby": "🧑‍🍼",
  "angel": "👼",
  "santa": "🎅",
  "mrs_claus": "🤶",
  "mx_claus": "🧑‍🎄",
  "superhero": "🦸",
  "superhero_man": "🦸‍♂️",
  "superhero_woman": "🦸‍♀️",
  "supervillain": "🦹",
  "supervillain_man": "🦹‍♂️",
  "supervillain_woman": "🦹‍♀️",
  "mage": "🧙",
  "mage_man": "🧙‍♂️",
  "mage_woman": "🧙‍♀️",
  "fairy": "🧚",
  "fairy_man": "🧚‍♂️",
  "fairy_woman": "🧚‍♀️",
  "vampire": "🧛",
  "vampire_man": "🧛‍♂️",
  "vampire_woman": "🧛‍♀️",
  "merperson": "🧜",
  "merman": "🧜‍♂️",
  "mermaid": "🧜‍♀️",
  "elf": "🧝",
  "elf_man": "🧝‍♂️",
  "elf_woman": "🧝‍♀️",
  "genie": "🧞",
  "genie_man": "🧞‍♂️",
  "genie_woman": "🧞‍♀️",
  "zombie": "🧟",
  "zombie_man": "🧟‍♂️",
  "zombie_woman": "🧟‍♀️",
  "massage": "💆",
  "massage_man": "💆‍♂️",
  "massage_woman": "💆‍♀️",
  "haircut": "💇",
  "haircut_man": "💇‍♂️",
  "haircut_woman": "💇‍♀️",
  "walking": "🚶",
  "walking_man": "🚶‍♂️",
  "walking_woman": "🚶‍♀️",
  "standing_person": "🧍",
  "standing_man": "🧍‍♂️",
  "standing_woman": "🧍‍♀️",
  "kneeling_person": "🧎",
  "kneeling_man": "🧎‍♂️",
  "kneeling_woman": "🧎‍♀️",
  "person_with_probing_cane": "🧑‍🦯",
  "man_with_probing_cane": "👨‍🦯",
  "woman_with_probing_cane": "👩‍🦯",
  "person_in_motorized_wheelchair": "🧑‍🦼",
  "man_in_motorized_wheelchair": "👨‍🦼",
  "woman_in_motorized_wheelchair": "👩‍🦼",
  "person_in_manual_wheelchair": "🧑‍🦽",
  "man_in_manual_wheelchair": "👨‍🦽",
  "woman_in_manual_wheelchair": "👩‍🦽",
  "runner": "🏃",
  "running": "🏃",
  "running_man": "🏃‍♂️",
  "running_woman": "🏃‍♀️",
  "woman_dancing": "💃",
  "dancer": "💃",
  "man_dancing": "🕺",
  "business_suit_levitating": "🕴️",
  "dancers": "👯",
  "dancing_men": "👯‍♂️",
  "dancing_women": "👯‍♀️",
  "sauna_person": "🧖",
  "sauna_man": "🧖‍♂️",
  "sauna_woman": "🧖‍♀️",
  "climbing": "🧗",
  "climbing_man": "🧗‍♂️",
  "climbing_woman": "🧗‍♀️",
  "person_fencing": "🤺",
  "horse_racing": "🏇",
  "skier": "⛷️",
  "snowboarder": "🏂",
  "golfing": "🏌️",
  "golfing_man": "🏌️‍♂️",
  "golfing_woman": "🏌️‍♀️",
  "surfer": "🏄",
  "surfing_man": "🏄‍♂️",
  "surfing_woman": "🏄‍♀️",
  "rowboat": "🚣",
  "rowing_man": "🚣‍♂️",
  "rowing_woman": "🚣‍♀️",
  "swimmer": "🏊",
  "swimming_man": "🏊‍♂️",
  "swimming_woman": "🏊‍♀️",
  "bouncing_ball_person": "⛹️",
  "bouncing_ball_man": "⛹️‍♂️",
  "basketball_man": "⛹️‍♂️",
  "bouncing_ball_woman": "⛹️‍♀️",
  "basketball_woman": "⛹️‍♀️",
  "weight_lifting": "🏋️",
  "weight_lifting_man": "🏋️‍♂️",
  "weight_lifting_woman": "🏋️‍♀️",
  "bicyclist": "🚴",
  "biking_man": "🚴‍♂️",
  "biking_woman": "🚴‍♀️",
  "mountain_bicyclist": "🚵",
  "mountain_biking_man": "🚵‍♂️",
  "mountain_biking_woman": "🚵‍♀️",
  "cartwheeling": "🤸",
  "man_cartwheeling": "🤸‍♂️",
  "woman_cartwheeling": "🤸‍♀️",
  "wrestling": "🤼",
  "men_wrestling": "🤼‍♂️",
  "women_wrestling": "🤼‍♀️",
  "water_polo": "🤽",
  "man_playing_water_polo": "🤽‍♂️",
  "woman_playing_water_polo": "🤽‍♀️",
  "handball_person": "🤾",
  "man_playing_handball": "🤾‍♂️",
  "woman_playing_handball": "🤾‍♀️",
  "juggling_person": "🤹",
  "man_juggling": "🤹‍♂️",
  "woman_juggling": "🤹‍♀️",
  "lotus_position": "🧘",
  "lotus_position_man": "🧘‍♂️",
  "lotus_position_woman": "🧘‍♀️",
  "bath": "🛀",
  "sleeping_bed": "🛌",
  "people_holding_hands": "🧑‍🤝‍🧑",
  "two_women_holding_hands": "👭",
  "couple": "👫",
  "two_men_holding_hands": "👬",
  "couplekiss": "💏",
  "couplekiss_man_woman": "👩‍❤️‍💋‍👨",
  "couplekiss_man_man": "👨‍❤️‍💋‍👨",
  "couplekiss_woman_woman": "👩‍❤️‍💋‍👩",
  "couple_with_heart": "💑",
  "couple_with_heart_woman_man": "👩‍❤️‍👨",
  "couple_with_heart_man_man": "👨‍❤️‍👨",
  "couple_with_heart_woman_woman": "👩‍❤️‍👩",
  "family": "👪",
  "family_man_woman_boy": "👨‍👩‍👦",
  "family_man_woman_girl": "👨‍👩‍👧",
  "family_man_woman_girl_boy": "👨‍👩‍👧‍👦",
  "family_man_woman_boy_boy": "👨‍👩‍👦‍👦",
  "family_man_woman_girl_girl": "👨‍👩‍👧‍👧",
  "family_man_man_boy": "👨‍👨‍👦",
  "family_man_man_girl": "👨‍👨‍👧",
  "family_man_man_girl_boy": "👨‍👨‍👧‍👦",
  "family_man_man_boy_boy": "👨‍👨‍👦‍👦",
  "family_man_man_girl_girl": "👨‍👨‍👧‍👧",
  "family_woman_woman_boy": "👩‍👩‍👦",
  "family_woman_woman_girl": "👩‍👩‍👧",
  "family_woman_woman_girl_boy": "👩‍👩‍👧‍👦",
  "family_woman_woman_boy_boy": "👩‍👩‍👦‍👦",
  "family_woman_woman_girl_girl": "👩‍👩‍👧‍👧",
  "family_man_boy": "👨‍👦",
  "family_man_boy_boy": "👨‍👦‍👦",
  "family_man_girl": "👨‍👧",
  "family_man_girl_boy": "👨‍👧‍👦",
  "family_man_girl_girl": "👨‍👧‍👧",
  "family_woman_boy": "👩‍👦",
  "family_woman_boy_boy": "👩‍👦‍👦",
  "family_woman_girl": "👩‍👧",
  "family_woman_girl_boy": "👩‍👧‍👦",
  "family_woman_girl_girl": "👩‍👧‍👧",
  "speaking_head": "🗣️",
  "bust_in_silhouette": "👤",
  "busts_in_silhouette": "👥",
  "people_hugging": "🫂",
  "footprints": "👣",
  "monkey_face": "🐵",
  "monkey": "🐒",
  "gorilla": "🦍",
  "orangutan": "🦧",
  "dog": "🐶",
  "dog2": "🐕",
  "guide_dog": "🦮",
  "service_dog": "🐕‍🦺",
  "poodle": "🐩",
  "wolf": "🐺",
  "fox_face": "🦊",
  "raccoon": "🦝",
  "cat": "🐱",
  "cat2": "🐈",
  "black_cat": "🐈‍⬛",
  "lion": "🦁",
  "tiger": "🐯",
  "tiger2": "🐅",
  "leopard": "🐆",
  "horse": "🐴",
  "racehorse": "🐎",
  "unicorn": "🦄",
  "zebra": "🦓",
  "deer": "🦌",
  "bison": "🦬",
  "cow": "🐮",
  "ox": "🐂",
  "water_buffalo": "🐃",
  "cow2": "🐄",
  "pig": "🐷",
  "pig2": "🐖",
  "boar": "🐗",
  "pig_nose": "🐽",
  "ram": "🐏",
  "sheep": "🐑",
  "goat": "🐐",
  "dromedary_camel": "🐪",
  "camel": "🐫",
  "llama": "🦙",
  "giraffe": "🦒",
  "elephant": "🐘",
  "mammoth": "🦣",
  "rhinoceros": "🦏",
  "hippopotamus": "🦛",
  "mouse": "🐭",
  "mouse2": "🐁",
  "rat": "🐀",
  "hamster": "🐹",
  "rabbit": "🐰",
  "rabbit2": "🐇",
  "chipmunk": "🐿️",
  "beaver": "🦫",
  "hedgehog": "🦔",
  "bat": "🦇",
  "bear": "🐻",
  "polar_bear": "🐻‍❄️",
  "koala": "🐨",
  "panda_face": "🐼",
  "sloth": "🦥",
  "otter": "🦦",
  "skunk": "🦨",
  "kangaroo": "🦘",
  "badger": "🦡",
  "feet": "🐾",
  "paw_prints": "🐾",
  "turkey": "🦃",
  "chicken": "🐔",
  "rooster": "🐓",
  "hatching_chick": "🐣",
  "baby_chick": "🐤",
  "hatched_chick": "🐥",
  "bird": "🐦",
  "penguin": "🐧",
  "dove": "🕊️",
  "eagle": "🦅",
  "duck": "🦆",
  "swan": "🦢",
  "owl": "🦉",
  "dodo": "🦤",
  "feather": "🪶",
  "flamingo": "🦩",
  "peacock": "🦚",
  "parrot": "🦜",
  "frog": "🐸",
  "crocodile": "🐊",
  "turtle": "🐢",
  "lizard": "🦎",
  "snake": "🐍",
  "dragon_face": "🐲",
  "dragon": "🐉",
  "sauropod": "🦕",
  "t-rex": "🦖",
  "whale": "🐳",
  "whale2": "🐋",
  "dolphin": "🐬",
  "flipper": "🐬",
  "seal": "🦭",
  "fish": "🐟",
  "tropical_fish": "🐠",
  "blowfish": "🐡",
  "shark": "🦈",
  "octopus": "🐙",
  "shell": "🐚",
  "snail": "🐌",
  "butterfly": "🦋",
  "bug": "🐛",
  "ant": "🐜",
  "bee": "🐝",
  "honeybee": "🐝",
  "beetle": "🪲",
  "lady_beetle": "🐞",
  "cricket": "🦗",
  "cockroach": "🪳",
  "spider": "🕷️",
  "spider_web": "🕸️",
  "scorpion": "🦂",
  "mosquito": "🦟",
  "fly": "🪰",
  "worm": "🪱",
  "microbe": "🦠",
  "bouquet": "💐",
  "cherry_blossom": "🌸",
  "white_flower": "💮",
  "rosette": "🏵️",
  "rose": "🌹",
  "wilted_flower": "🥀",
  "hibiscus": "🌺",
  "sunflower": "🌻",
  "blossom": "🌼",
  "tulip": "🌷",
  "seedling": "🌱",
  "potted_plant": "🪴",
  "evergreen_tree": "🌲",
  "deciduous_tree": "🌳",
  "palm_tree": "🌴",
  "cactus": "🌵",
  "ear_of_rice": "🌾",
  "herb": "🌿",
  "shamrock": "☘️",
  "four_leaf_clover": "🍀",
  "maple_leaf": "🍁",
  "fallen_leaf": "🍂",
  "leaves": "🍃",
  "grapes": "🍇",
  "melon": "🍈",
  "watermelon": "🍉",
  "tangerine": "🍊",
  "orange": "🍊",
  "mandarin": "🍊",
  "lemon": "🍋",
  "banana": "🍌",
  "pineapple": "🍍",
  "mango": "🥭",
  "apple": "🍎",
  "green_apple": "🍏",
  "pear": "🍐",
  "peach": "🍑",
  "cherries": "🍒",
  "strawberry": "🍓",
  "blueberries": "🫐",
  "kiwi_fruit": "🥝",
  "tomato": "🍅",
  "olive": "🫒",
  "coconut": "🥥",
  "avocado": "🥑",
  "eggplant": "🍆",
  "potato": "🥔",
  "carrot": "🥕",
  "corn": "🌽",
  "hot_pepper": "🌶️",
  "bell_pepper": "🫑",
  "cucumber": "🥒",
  "leafy_green": "🥬",
  "broccoli": "🥦",
  "garlic": "🧄",
  "onion": "🧅",
  "mushroom": "🍄",
  "peanuts": "🥜",
  "chestnut": "🌰",
  "bread": "🍞",
  "croissant": "🥐",
  "baguette_bread": "🥖",
  "flatbread": "🫓",
  "pretzel": "🥨",
  "bagel": "🥯",
  "pancakes": "🥞",
  "waffle": "🧇",
  "cheese": "🧀",
  "meat_on_bone": "🍖",
  "poultry_leg": "🍗",
  "cut_of_meat": "🥩",
  "bacon": "🥓",
  "hamburger": "🍔",
  "fries": "🍟",
  "pizza": "🍕",
  "hotdog": "🌭",
  "sandwich": "🥪",
  "taco": "🌮",
  "burrito": "🌯",
  "tamale": "🫔",
  "stuffed_flatbread": "🥙",
  "falafel": "🧆",
  "egg": "🥚",
  "fried_egg": "🍳",
  "shallow_pan_of_food": "🥘",
  "stew": "🍲",
  "fondue": "🫕",
  "bowl_with_spoon": "🥣",
  "green_salad": "🥗",
  "popcorn": "🍿",
  "butter": "🧈",
  "salt": "🧂",
  "canned_food": "🥫",
  "bento": "🍱",
  "rice_cracker": "🍘",
  "rice_ball": "🍙",
  "rice": "🍚",
  "curry": "🍛",
  "ramen": "🍜",
  "spaghetti": "🍝",
  "sweet_potato": "🍠",
  "oden": "🍢",
  "sushi": "🍣",
  "fried_shrimp": "🍤",
  "fish_cake": "🍥",
  "moon_cake": "🥮",
  "dango": "🍡",
  "dumpling": "🥟",
  "fortune_cookie": "🥠",
  "takeout_box": "🥡",
  "crab": "🦀",
  "lobster": "🦞",
  "shrimp": "🦐",
  "squid": "🦑",
  "oyster": "🦪",
  "icecream": "🍦",
  "shaved_ice": "🍧",
  "ice_cream": "🍨",
  "doughnut": "🍩",
  "cookie": "🍪",
  "birthday": "🎂",
  "cake": "🍰",
  "cupcake": "🧁",
  "pie": "🥧",
  "chocolate_bar": "🍫",
  "candy": "🍬",
  "lollipop": "🍭",
  "custard": "🍮",
  "honey_pot": "🍯",
  "baby_bottle": "🍼",
  "milk_glass": "🥛",
  "coffee": "☕",
  "teapot": "🫖",
  "tea": "🍵",
  "sake": "🍶",
  "champagne": "🍾",
  "wine_glass": "🍷",
  "cocktail": "🍸",
  "tropical_drink": "🍹",
  "beer": "🍺",
  "beers": "🍻",
  "clinking_glasses": "🥂",
  "tumbler_glass": "🥃",
  "cup_with_straw": "🥤",
  "bubble_tea": "🧋",
  "beverage_box": "🧃",
  "mate": "🧉",
  "ice_cube": "🧊",
  "chopsticks": "🥢",
  "plate_with_cutlery": "🍽️",
  "fork_and_knife": "🍴",
  "spoon": "🥄",
  "hocho": "🔪",
  "knife": "🔪",
  "amphora": "🏺",
  "earth_africa": "🌍",
  "earth_americas": "🌎",
  "earth_asia": "🌏",
  "globe_with_meridians": "🌐",
  "world_map": "🗺️",
  "japan": "🗾",
  "compass": "🧭",
  "mountain_snow": "🏔️",
  "mountain": "⛰️",
  "volcano": "🌋",
  "mount_fuji": "🗻",
  "camping": "🏕️",
  "beach_umbrella": "🏖️",
  "desert": "🏜️",
  "desert_island": "🏝️",
  "national_park": "🏞️",
  "stadium": "🏟️",
  "classical_building": "🏛️",
  "building_construction": "🏗️",
  "bricks": "🧱",
  "rock": "🪨",
  "wood": "🪵",
  "hut": "🛖",
  "houses": "🏘️",
  "derelict_house": "🏚️",
  "house": "🏠",
  "house_with_garden": "🏡",
  "office": "🏢",
  "post_office": "🏣",
  "european_post_office": "🏤",
  "hospital": "🏥",
  "bank": "🏦",
  "hotel": "🏨",
  "love_hotel": "🏩",
  "convenience_store": "🏪",
  "school": "🏫",
  "department_store": "🏬",
  "factory": "🏭",
  "japanese_castle": "🏯",
  "european_castle": "🏰",
  "wedding": "💒",
  "tokyo_tower": "🗼",
  "statue_of_liberty": "🗽",
  "church": "⛪",
  "mosque": "🕌",
  "hindu_temple": "🛕",
  "synagogue": "🕍",
  "shinto_shrine": "⛩️",
  "kaaba": "🕋",
  "fountain": "⛲",
  "tent": "⛺",
  "foggy": "🌁",
  "night_with_stars": "🌃",
  "cityscape": "🏙️",
  "sunrise_over_mountains": "🌄",
  "sunrise": "🌅",
  "city_sunset": "🌆",
  "city_sunrise": "🌇",
  "bridge_at_night": "🌉",
  "hotsprings": "♨️",
  "carousel_horse": "🎠",
  "ferris_wheel": "🎡",
  "roller_coaster": "🎢",
  "barber": "💈",
  "circus_tent": "🎪",
  "steam_locomotive": "🚂",
  "railway_car": "🚃",
  "bullettrain_side": "🚄",
  "bullettrain_front": "🚅",
  "train2": "🚆",
  "metro": "🚇",
  "light_rail": "🚈",
  "station": "🚉",
  "tram": "🚊",
  "monorail": "🚝",
  "mountain_railway": "🚞",
  "train": "🚋",
  "bus": "🚌",
  "oncoming_bus": "🚍",
  "trolleybus": "🚎",
  "minibus": "🚐",
  "ambulance": "🚑",
  "fire_engine": "🚒",
  "police_car": "🚓",
  "oncoming_police_car": "🚔",
  "taxi": "🚕",
  "oncoming_taxi": "🚖",
  "car": "🚗",
  "red_car": "🚗",
  "oncoming_automobile": "🚘",
  "blue_car": "🚙",
  "pickup_truck": "🛻",
  "truck": "🚚",
  "articulated_lorry": "🚛",
  "tractor": "🚜",
  "racing_car": "🏎️",
  "motorcycle": "🏍️",
  "motor_scooter": "🛵",
  "manual_wheelchair": "🦽",
  "motorized_wheelchair": "🦼",
  "auto_rickshaw": "🛺",
  "bike": "🚲",
  "kick_scooter": "🛴",
  "skateboard": "🛹",
  "roller_skate": "🛼",
  "busstop": "🚏",
  "motorway": "🛣️",
  "railway_track": "🛤️",
  "oil_drum": "🛢️",
  "fuelpump": "⛽",
  "rotating_light": "🚨",
  "traffic_light": "🚥",
  "vertical_traffic_light": "🚦",
  "stop_sign": "🛑",
  "construction": "🚧",
  "anchor": "⚓",
  "boat": "⛵",
  "sailboat": "⛵",
  "canoe": "🛶",
  "speedboat": "🚤",
  "passenger_ship": "🛳️",
  "ferry": "⛴️",
  "motor_boat": "🛥️",
  "ship": "🚢",
  "airplane": "✈️",
  "small_airplane": "🛩️",
  "flight_departure": "🛫",
  "flight_arrival": "🛬",
  "parachute": "🪂",
  "seat": "💺",
  "helicopter": "🚁",
  "suspension_railway": "🚟",
  "mountain_cableway": "🚠",
  "aerial_tramway": "🚡",
  "artificial_satellite": "🛰️",
  "rocket": "🚀",
  "flying_saucer": "🛸",
  "bellhop_bell": "🛎️",
  "luggage": "🧳",
  "hourglass": "⌛",
  "hourglass_flowing_sand": "⏳",
  "watch": "⌚",
  "alarm_clock": "⏰",
  "stopwatch": "⏱️",
  "timer_clock": "⏲️",
  "mantelpiece_clock": "🕰️",
  "clock12": "🕛",
  "clock1230": "🕧",
  "clock1": "🕐",
  "clock130": "🕜",
  "clock2": "🕑",
  "clock230": "🕝",
  "clock3": "🕒",
  "clock330": "🕞",
  "clock4": "🕓",
  "clock430": "🕟",
  "clock5": "🕔",
  "clock530": "🕠",
  "clock6": "🕕",
  "clock630": "🕡",
  "clock7": "🕖",
  "clock730": "🕢",
  "clock8": "🕗",
  "clock830": "🕣",
  "clock9": "🕘",
  "clock930": "🕤",
  "clock10": "🕙",
  "clock1030": "🕥",
  "clock11": "🕚",
  "clock1130": "🕦",
  "new_moon": "🌑",
  "waxing_crescent_moon": "🌒",
  "first_quarter_moon": "🌓",
  "moon": "🌔",
  "waxing_gibbous_moon": "🌔",
  "full_moon": "🌕",
  "waning_gibbous_moon": "🌖",
  "last_quarter_moon": "🌗",
  "waning_crescent_moon": "🌘",
  "crescent_moon": "🌙",
  "new_moon_with_face": "🌚",
  "first_quarter_moon_with_face": "🌛",
  "last_quarter_moon_with_face": "🌜",
  "thermometer": "🌡️",
  "sunny": "☀️",
  "full_moon_with_face": "🌝",
  "sun_with_face": "🌞",
  "ringed_planet": "🪐",
  "star": "⭐",
  "star2": "🌟",
  "stars": "🌠",
  "milky_way": "🌌",
  "cloud": "☁️",
  "partly_sunny": "⛅",
  "cloud_with_lightning_and_rain": "⛈️",
  "sun_behind_small_cloud": "🌤️",
  "sun_behind_large_cloud": "🌥️",
  "sun_behind_rain_cloud": "🌦️",
  "cloud_with_rain": "🌧️",
  "cloud_with_snow": "🌨️",
  "cloud_with_lightning": "🌩️",
  "tornado": "🌪️",
  "fog": "🌫️",
  "wind_face": "🌬️",
  "cyclone": "🌀",
  "rainbow": "🌈",
  "closed_umbrella": "🌂",
  "open_umbrella": "☂️",
  "umbrella": "☔",
  "parasol_on_ground": "⛱️",
  "zap": "⚡",
  "snowflake": "❄️",
  "snowman_with_snow": "☃️",
  "snowman": "⛄",
  "comet": "☄️",
  "fire": "🔥",
  "droplet": "💧",
  "ocean": "🌊",
  "jack_o_lantern": "🎃",
  "christmas_tree": "🎄",
  "fireworks": "🎆",
  "sparkler": "🎇",
  "firecracker": "🧨",
  "sparkles": "✨",
  "balloon": "🎈",
  "tada": "🎉",
  "confetti_ball": "🎊",
  "tanabata_tree": "🎋",
  "bamboo": "🎍",
  "dolls": "🎎",
  "flags": "🎏",
  "wind_chime": "🎐",
  "rice_scene": "🎑",
  "red_envelope": "🧧",
  "ribbon": "🎀",
  "gift": "🎁",
  "reminder_ribbon": "🎗️",
  "tickets": "🎟️",
  "ticket": "🎫",
  "medal_military": "🎖️",
  "trophy": "🏆",
  "medal_sports": "🏅",
  "1st_place_medal": "🥇",
  "2nd_place_medal": "🥈",
  "3rd_place_medal": "🥉",
  "soccer": "⚽",
  "baseball": "⚾",
  "softball": "🥎",
  "basketball": "🏀",
  "volleyball": "🏐",
  "football": "🏈",
  "rugby_football": "🏉",
  "tennis": "🎾",
  "flying_disc": "🥏",
  "bowling": "🎳",
  "cricket_game": "🏏",
  "field_hockey": "🏑",
  "ice_hockey": "🏒",
  "lacrosse": "🥍",
  "ping_pong": "🏓",
  "badminton": "🏸",
  "boxing_glove": "🥊",
  "martial_arts_uniform": "🥋",
  "goal_net": "🥅",
  "golf": "⛳",
  "ice_skate": "⛸️",
  "fishing_pole_and_fish": "🎣",
  "diving_mask": "🤿",
  "running_shirt_with_sash": "🎽",
  "ski": "🎿",
  "sled": "🛷",
  "curling_stone": "🥌",
  "dart": "🎯",
  "yo_yo": "🪀",
  "kite": "🪁",
  "8ball": "🎱",
  "crystal_ball": "🔮",
  "magic_wand": "🪄",
  "nazar_amulet": "🧿",
  "video_game": "🎮",
  "joystick": "🕹️",
  "slot_machine": "🎰",
  "game_die": "🎲",
  "jigsaw": "🧩",
  "teddy_bear": "🧸",
  "pinata": "🪅",
  "nesting_dolls": "🪆",
  "spades": "♠️",
  "hearts": "♥️",
  "diamonds": "♦️",
  "clubs": "♣️",
  "chess_pawn": "♟️",
  "black_joker": "🃏",
  "mahjong": "🀄",
  "flower_playing_cards": "🎴",
  "performing_arts": "🎭",
  "framed_picture": "🖼️",
  "art": "🎨",
  "thread": "🧵",
  "sewing_needle": "🪡",
  "yarn": "🧶",
  "knot": "🪢",
  "eyeglasses": "👓",
  "dark_sunglasses": "🕶️",
  "goggles": "🥽",
  "lab_coat": "🥼",
  "safety_vest": "🦺",
  "necktie": "👔",
  "shirt": "👕",
  "tshirt": "👕",
  "jeans": "👖",
  "scarf": "🧣",
  "gloves": "🧤",
  "coat": "🧥",
  "socks": "🧦",
  "dress": "👗",
  "kimono": "👘",
  "sari": "🥻",
  "one_piece_swimsuit": "🩱",
  "swim_brief": "🩲",
  "shorts": "🩳",
  "bikini": "👙",
  "womans_clothes": "👚",
  "purse": "👛",
  "handbag": "👜",
  "pouch": "👝",
  "shopping": "🛍️",
  "school_satchel": "🎒",
  "thong_sandal": "🩴",
  "mans_shoe": "👞",
  "shoe": "👞",
  "athletic_shoe": "👟",
  "hiking_boot": "🥾",
  "flat_shoe": "🥿",
  "high_heel": "👠",
  "sandal": "👡",
  "ballet_shoes": "🩰",
  "boot": "👢",
  "crown": "👑",
  "womans_hat": "👒",
  "tophat": "🎩",
  "mortar_board": "🎓",
  "billed_cap": "🧢",
  "military_helmet": "🪖",
  "rescue_worker_helmet": "⛑️",
  "prayer_beads": "📿",
  "lipstick": "💄",
  "ring": "💍",
  "gem": "💎",
  "mute": "🔇",
  "speaker": "🔈",
  "sound": "🔉",
  "loud_sound": "🔊",
  "loudspeaker": "📢",
  "mega": "📣",
  "postal_horn": "📯",
  "bell": "🔔",
  "no_bell": "🔕",
  "musical_score": "🎼",
  "musical_note": "🎵",
  "notes": "🎶",
  "studio_microphone": "🎙️",
  "level_slider": "🎚️",
  "control_knobs": "🎛️",
  "microphone": "🎤",
  "headphones": "🎧",
  "radio": "📻",
  "saxophone": "🎷",
  "accordion": "🪗",
  "guitar": "🎸",
  "musical_keyboard": "🎹",
  "trumpet": "🎺",
  "violin": "🎻",
  "banjo": "🪕",
  "drum": "🥁",
  "long_drum": "🪘",
  "iphone": "📱",
  "calling": "📲",
  "phone": "☎️",
  "telephone": "☎️",
  "telephone_receiver": "📞",
  "pager": "📟",
  "fax": "📠",
  "battery": "🔋",
  "electric_plug": "🔌",
  "computer": "💻",
  "desktop_computer": "🖥️",
  "printer": "🖨️",
  "keyboard": "⌨️",
  "computer_mouse": "🖱️",
  "trackball": "🖲️",
  "minidisc": "💽",
  "floppy_disk": "💾",
  "cd": "💿",
  "dvd": "📀",
  "abacus": "🧮",
  "movie_camera": "🎥",
  "film_strip": "🎞️",
  "film_projector": "📽️",
  "clapper": "🎬",
  "tv": "📺",
  "camera": "📷",
  "camera_flash": "📸",
  "video_camera": "📹",
  "vhs": "📼",
  "mag": "🔍",
  "mag_right": "🔎",
  "candle": "🕯️",
  "bulb": "💡",
  "flashlight": "🔦",
  "izakaya_lantern": "🏮",
  "lantern": "🏮",
  "diya_lamp": "🪔",
  "notebook_with_decorative_cover": "📔",
  "closed_book": "📕",
  "book": "📖",
  "open_book": "📖",
  "green_book": "📗",
  "blue_book": "📘",
  "orange_book": "📙",
  "books": "📚",
  "notebook": "📓",
  "ledger": "📒",
  "page_with_curl": "📃",
  "scroll": "📜",
  "page_facing_up": "📄",
  "newspaper": "📰",
  "newspaper_roll": "🗞️",
  "bookmark_tabs": "📑",
  "bookmark": "🔖",
  "label": "🏷️",
  "moneybag": "💰",
  "coin": "🪙",
  "yen": "💴",
  "dollar": "💵",
  "euro": "💶",
  "pound": "💷",
  "money_with_wings": "💸",
  "credit_card": "💳",
  "receipt": "🧾",
  "chart": "💹",
  "envelope": "✉️",
  "email": "📧",
  "e-mail": "📧",
  "incoming_envelope": "📨",
  "envelope_with_arrow": "📩",
  "outbox_tray": "📤",
  "inbox_tray": "📥",
  "package": "📦",
  "mailbox": "📫",
  "mailbox_closed": "📪",
  "mailbox_with_mail": "📬",
  "mailbox_with_no_mail": "📭",
  "postbox": "📮",
  "ballot_box": "🗳️",
  "pencil2": "✏️",
  "black_nib": "✒️",
  "fountain_pen": "🖋️",
  "pen": "🖊️",
  "paintbrush": "🖌️",
  "crayon": "🖍️",
  "memo": "📝",
  "pencil": "📝",
  "briefcase": "💼",
  "file_folder": "📁",
  "open_file_folder": "📂",
  "card_index_dividers": "🗂️",
  "date": "📅",
  "calendar": "📆",
  "spiral_notepad": "🗒️",
  "spiral_calendar": "🗓️",
  "card_index": "📇",
  "chart_with_upwards_trend": "📈",
  "chart_with_downwards_trend": "📉",
  "bar_chart": "📊",
  "clipboard": "📋",
  "pushpin": "📌",
  "round_pushpin": "📍",
  "paperclip": "📎",
  "paperclips": "🖇️",
  "straight_ruler": "📏",
  "triangular_ruler": "📐",
  "scissors": "✂️",
  "card_file_box": "🗃️",
  "file_cabinet": "🗄️",
  "wastebasket": "🗑️",
  "lock": "🔒",
  "unlock": "🔓",
  "lock_with_ink_pen": "🔏",
  "closed_lock_with_key": "🔐",
  "key": "🔑",
  "old_key": "🗝️",
  "hammer": "🔨",
  "axe": "🪓",
  "pick": "⛏️",
  "hammer_and_pick": "⚒️",
  "hammer_and_wrench": "🛠️",
  "dagger": "🗡️",
  "crossed_swords": "⚔️",
  "gun": "🔫",
  "boomerang": "🪃",
  "bow_and_arrow": "🏹",
  "shield": "🛡️",
  "carpentry_saw": "🪚",
  "wrench": "🔧",
  "screwdriver": "🪛",
  "nut_and_bolt": "🔩",
  "gear": "⚙️",
  "clamp": "🗜️",
  "balance_scale": "⚖️",
  "probing_cane": "🦯",
  "link": "🔗",
  "chains": "⛓️",
  "hook": "🪝",
  "toolbox": "🧰",
  "magnet": "🧲",
  "ladder": "🪜",
  "alembic": "⚗️",
  "test_tube": "🧪",
  "petri_dish": "🧫",
  "dna": "🧬",
  "microscope": "🔬",
  "telescope": "🔭",
  "satellite": "📡",
  "syringe": "💉",
  "drop_of_blood": "🩸",
  "pill": "💊",
  "adhesive_bandage": "🩹",
  "stethoscope": "🩺",
  "door": "🚪",
  "elevator": "🛗",
  "mirror": "🪞",
  "window": "🪟",
  "bed": "🛏️",
  "couch_and_lamp": "🛋️",
  "chair": "🪑",
  "toilet": "🚽",
  "plunger": "🪠",
  "shower": "🚿",
  "bathtub": "🛁",
  "mouse_trap": "🪤",
  "razor": "🪒",
  "lotion_bottle": "🧴",
  "safety_pin": "🧷",
  "broom": "🧹",
  "basket": "🧺",
  "roll_of_paper": "🧻",
  "bucket": "🪣",
  "soap": "🧼",
  "toothbrush": "🪥",
  "sponge": "🧽",
  "fire_extinguisher": "🧯",
  "shopping_cart": "🛒",
  "smoking": "🚬",
  "coffin": "⚰️",
  "headstone": "🪦",
  "funeral_urn": "⚱️",
  "moyai": "🗿",
  "placard": "🪧",
  "atm": "🏧",
  "put_litter_in_its_place": "🚮",
  "potable_water": "🚰",
  "wheelchair": "♿",
  "mens": "🚹",
  "womens": "🚺",
  "restroom": "🚻",
  "baby_symbol": "🚼",
  "wc": "🚾",
  "passport_control": "🛂",
  "customs": "🛃",
  "baggage_claim": "🛄",
  "left_luggage": "🛅",
  "warning": "⚠️",
  "children_crossing": "🚸",
  "no_entry": "⛔",
  "no_entry_sign": "🚫",
  "no_bicycles": "🚳",
  "no_smoking": "🚭",
  "do_not_litter": "🚯",
  "non-potable_water": "🚱",
  "no_pedestrians": "🚷",
  "no_mobile_phones": "📵",
  "underage": "🔞",
  "radioactive": "☢️",
  "biohazard": "☣️",
  "arrow_up": "⬆️",
  "arrow_upper_right": "↗️",
  "arrow_right": "➡️",
  "arrow_lower_right": "↘️",
  "arrow_down": "⬇️",
  "arrow_lower_left": "↙️",
  "arrow_left": "⬅️",
  "arrow_upper_left": "↖️",
  "arrow_up_down": "↕️",
  "left_right_arrow": "↔️",
  "leftwards_arrow_with_hook": "↩️",
  "arrow_right_hook": "↪️",
  "arrow_heading_up": "⤴️",
  "arrow_heading_down": "⤵️",
  "arrows_clockwise": "🔃",
  "arrows_counterclockwise": "🔄",
  "back": "🔙",
  "end": "🔚",
  "on": "🔛",
  "soon": "🔜",
  "top": "🔝",
  "place_of_worship": "🛐",
  "atom_symbol": "⚛️",
  "om": "🕉️",
  "star_of_david": "✡️",
  "wheel_of_dharma": "☸️",
  "yin_yang": "☯️",
  "latin_cross": "✝️",
  "orthodox_cross": "☦️",
  "star_and_crescent": "☪️",
  "peace_symbol": "☮️",
  "menorah": "🕎",
  "six_pointed_star": "🔯",
  "aries": "♈",
  "taurus": "♉",
  "gemini": "♊",
  "cancer": "♋",
  "leo": "♌",
  "virgo": "♍",
  "libra": "♎",
  "scorpius": "♏",
  "sagittarius": "♐",
  "capricorn": "♑",
  "aquarius": "♒",
  "pisces": "♓",
  "ophiuchus": "⛎",
  "twisted_rightwards_arrows": "🔀",
  "repeat": "🔁",
  "repeat_one": "🔂",
  "arrow_forward": "▶️",
  "fast_forward": "⏩",
  "next_track_button": "⏭️",
  "play_or_pause_button": "⏯️",
  "arrow_backward": "◀️",
  "rewind": "⏪",
  "previous_track_button": "⏮️",
  "arrow_up_small": "🔼",
  "arrow_double_up": "⏫",
  "arrow_down_small": "🔽",
  "arrow_double_down": "⏬",
  "pause_button": "⏸️",
  "stop_button": "⏹️",
  "record_button": "⏺️",
  "eject_button": "⏏️",
  "cinema": "🎦",
  "low_brightness": "🔅",
  "high_brightness": "🔆",
  "signal_strength": "📶",
  "vibration_mode": "📳",
  "mobile_phone_off": "📴",
  "female_sign": "♀️",
  "male_sign": "♂️",
  "transgender_symbol": "⚧️",
  "heavy_multiplication_x": "✖️",
  "heavy_plus_sign": "➕",
  "heavy_minus_sign": "➖",
  "heavy_division_sign": "➗",
  "infinity": "♾️",
  "bangbang": "‼️",
  "interrobang": "⁉️",
  "question": "❓",
  "grey_question": "❔",
  "grey_exclamation": "❕",
  "exclamation": "❗",
  "heavy_exclamation_mark": "❗",
  "wavy_dash": "〰️",
  "currency_exchange": "💱",
  "heavy_dollar_sign": "💲",
  "medical_symbol": "⚕️",
  "recycle": "♻️",
  "fleur_de_lis": "⚜️",
  "trident": "🔱",
  "name_badge": "📛",
  "beginner": "🔰",
  "o": "⭕",
  "white_check_mark": "✅",
  "ballot_box_with_check": "☑️",
  "heavy_check_mark": "✔️",
  "x": "❌",
  "negative_squared_cross_mark": "❎",
  "curly_loop": "➰",
  "loop": "➿",
  "part_alternation_mark": "〽️",
  "eight_spoked_asterisk": "✳️",
  "eight_pointed_black_star": "✴️",
  "sparkle": "❇️",
  "copyright": "©️",
  "registered": "®️",
  "tm": "™️",
  "hash": "#️⃣",
  "asterisk": "*️⃣",
  "zero": "0️⃣",
  "one": "1️⃣",
  "two": "2️⃣",
  "three": "3️⃣",
  "four": "4️⃣",
  "five": "5️⃣",
  "six": "6️⃣",
  "seven": "7️⃣",
  "eight": "8️⃣",
  "nine": "9️⃣",
  "keycap_ten": "🔟",
  "capital_abcd": "🔠",
  "abcd": "🔡",
  "symbols": "🔣",
  "abc": "🔤",
  "a": "🅰️",
  "ab": "🆎",
  "b": "🅱️",
  "cl": "🆑",
  "cool": "🆒",
  "free": "🆓",
  "information_source": "ℹ️",
  "id": "🆔",
  "m": "Ⓜ️",
  "new": "🆕",
  "ng": "🆖",
  "o2": "🅾️",
  "ok": "🆗",
  "parking": "🅿️",
  "sos": "🆘",
  "up": "🆙",
  "vs": "🆚",
  "koko": "🈁",
  "sa": "🈂️",
  "ideograph_advantage": "🉐",
  "accept": "🉑",
  "congratulations": "㊗️",
  "secret": "㊙️",
  "u6e80": "🈵",
  "red_circle": "🔴",
  "orange_circle": "🟠",
  "yellow_circle": "🟡",
  "green_circle": "🟢",
  "large_blue_circle": "🔵",
  "purple_circle": "🟣",
  "brown_circle": "🟤",
  "black_circle": "⚫",
  "white_circle": "⚪",
  "red_square": "🟥",
  "orange_square": "🟧",
  "yellow_square": "🟨",
  "green_square": "🟩",
  "blue_square": "🟦",
  "purple_square": "🟪",
  "brown_square": "🟫",
  "black_large_square": "⬛",
  "white_large_square": "⬜",
  "black_medium_square": "◼️",
  "white_medium_square": "◻️",
  "black_medium_small_square": "◾",
  "white_medium_small_square": "◽",
  "black_small_square": "▪️",
  "white_small_square": "▫️",
  "large_orange_diamond": "🔶",
  "large_blue_diamond": "🔷",
  "small_orange_diamond": "🔸",
  "small_blue_diamond": "🔹",
  "small_red_triangle": "🔺",
  "small_red_triangle_down": "🔻",
  "diamond_shape_with_a_dot_inside": "💠",
  "radio_button": "🔘",
  "white_square_button": "🔳",
  "black_square_button": "🔲",
  "checkered_flag": "🏁",
  "triangular_flag_on_post": "🚩",
  "crossed_flags": "🎌",
  "black_flag": "🏴",
  "white_flag": "🏳️",
  "rainbow_flag": "🏳️‍🌈",
  "transgender_flag": "🏳️‍⚧️",
  "pirate_flag": "🏴‍☠️",
  "ascension_island": "🇦🇨",
  "andorra": "🇦🇩",
  "united_arab_emirates": "🇦🇪",
  "afghanistan": "🇦🇫",
  "antigua_barbuda": "🇦🇬",
  "anguilla": "🇦🇮",
  "albania": "🇦🇱",
  "armenia": "🇦🇲",
  "angola": "🇦🇴",
  "antarctica": "🇦🇶",
  "argentina": "🇦🇷",
  "american_samoa": "🇦🇸",
  "austria": "🇦🇹",
  "australia": "🇦🇺",
  "aruba": "🇦🇼",
  "aland_islands": "🇦🇽",
  "azerbaijan": "🇦🇿",
  "bosnia_herzegovina": "🇧🇦",
  "barbados": "🇧🇧",
  "bangladesh": "🇧🇩",
  "belgium": "🇧🇪",
  "burkina_faso": "🇧🇫",
  "bulgaria": "🇧🇬",
  "bahrain": "🇧🇭",
  "burundi": "🇧🇮",
  "benin": "🇧🇯",
  "st_barthelemy": "🇧🇱",
  "bermuda": "🇧🇲",
  "brunei": "🇧🇳",
  "bolivia": "🇧🇴",
  "caribbean_netherlands": "🇧🇶",
  "brazil": "🇧🇷",
  "bahamas": "🇧🇸",
  "bhutan": "🇧🇹",
  "bouvet_island": "🇧🇻",
  "botswana": "🇧🇼",
  "belarus": "🇧🇾",
  "belize": "🇧🇿",
  "canada": "🇨🇦",
  "cocos_islands": "🇨🇨",
  "congo_kinshasa": "🇨🇩",
  "central_african_republic": "🇨🇫",
  "congo_brazzaville": "🇨🇬",
  "switzerland": "🇨🇭",
  "cote_divoire": "🇨🇮",
  "cook_islands": "🇨🇰",
  "chile": "🇨🇱",
  "cameroon": "🇨🇲",
  "cn": "🇨🇳",
  "colombia": "🇨🇴",
  "clipperton_island": "🇨🇵",
  "costa_rica": "🇨🇷",
  "cuba": "🇨🇺",
  "cape_verde": "🇨🇻",
  "curacao": "🇨🇼",
  "christmas_island": "🇨🇽",
  "cyprus": "🇨🇾",
  "czech_republic": "🇨🇿",
  "de": "🇩🇪",
  "diego_garcia": "🇩🇬",
  "djibouti": "🇩🇯",
  "denmark": "🇩🇰",
  "dominica": "🇩🇲",
  "dominican_republic": "🇩🇴",
  "algeria": "🇩🇿",
  "ceuta_melilla": "🇪🇦",
  "ecuador": "🇪🇨",
  "estonia": "🇪🇪",
  "egypt": "🇪🇬",
  "western_sahara": "🇪🇭",
  "eritrea": "🇪🇷",
  "es": "🇪🇸",
  "ethiopia": "🇪🇹",
  "eu": "🇪🇺",
  "european_union": "🇪🇺",
  "finland": "🇫🇮",
  "fiji": "🇫🇯",
  "falkland_islands": "🇫🇰",
  "micronesia": "🇫🇲",
  "faroe_islands": "🇫🇴",
  "fr": "🇫🇷",
  "gabon": "🇬🇦",
  "gb": "🇬🇧",
  "uk": "🇬🇧",
  "grenada": "🇬🇩",
  "georgia": "🇬🇪",
  "french_guiana": "🇬🇫",
  "guernsey": "🇬🇬",
  "ghana": "🇬🇭",
  "gibraltar": "🇬🇮",
  "greenland": "🇬🇱",
  "gambia": "🇬🇲",
  "guinea": "🇬🇳",
  "guadeloupe": "🇬🇵",
  "equatorial_guinea": "🇬🇶",
  "greece": "🇬🇷",
  "south_georgia_south_sandwich_islands": "🇬🇸",
  "guatemala": "🇬🇹",
  "guam": "🇬🇺",
  "guinea_bissau": "🇬🇼",
  "guyana": "🇬🇾",
  "hong_kong": "🇭🇰",
  "heard_mcdonald_islands": "🇭🇲",
  "honduras": "🇭🇳",
  "croatia": "🇭🇷",
  "haiti": "🇭🇹",
  "hungary": "🇭🇺",
  "canary_islands": "🇮🇨",
  "indonesia": "🇮🇩",
  "ireland": "🇮🇪",
  "israel": "🇮🇱",
  "isle_of_man": "🇮🇲",
  "india": "🇮🇳",
  "british_indian_ocean_territory": "🇮🇴",
  "iraq": "🇮🇶",
  "iran": "🇮🇷",
  "iceland": "🇮🇸",
  "it": "🇮🇹",
  "jersey": "🇯🇪",
  "jamaica": "🇯🇲",
  "jordan": "🇯🇴",
  "jp": "🇯🇵",
  "kenya": "🇰🇪",
  "kyrgyzstan": "🇰🇬",
  "cambodia": "🇰🇭",
  "kiribati": "🇰🇮",
  "comoros": "🇰🇲",
  "st_kitts_nevis": "🇰🇳",
  "north_korea": "🇰🇵",
  "kr": "🇰🇷",
  "kuwait": "🇰🇼",
  "cayman_islands": "🇰🇾",
  "kazakhstan": "🇰🇿",
  "laos": "🇱🇦",
  "lebanon": "🇱🇧",
  "st_lucia": "🇱🇨",
  "liechtenstein": "🇱🇮",
  "sri_lanka": "🇱🇰",
  "liberia": "🇱🇷",
  "lesotho": "🇱🇸",
  "lithuania": "🇱🇹",
  "luxembourg": "🇱🇺",
  "latvia": "🇱🇻",
  "libya": "🇱🇾",
  "morocco": "🇲🇦",
  "monaco": "🇲🇨",
  "moldova": "🇲🇩",
  "montenegro": "🇲🇪",
  "st_martin": "🇲🇫",
  "madagascar": "🇲🇬",
  "marshall_islands": "🇲🇭",
  "macedonia": "🇲🇰",
  "mali": "🇲🇱",
  "myanmar": "🇲🇲",
  "mongolia": "🇲🇳",
  "macau": "🇲🇴",
  "northern_mariana_islands": "🇲🇵",
  "martinique": "🇲🇶",
  "mauritania": "🇲🇷",
  "montserrat": "🇲🇸",
  "malta": "🇲🇹",
  "mauritius": "🇲🇺",
  "maldives": "🇲🇻",
  "malawi": "🇲🇼",
  "mexico": "🇲🇽",
  "malaysia": "🇲🇾",
  "mozambique": "🇲🇿",
  "namibia": "🇳🇦",
  "new_caledonia": "🇳🇨",
  "niger": "🇳🇪",
  "norfolk_island": "🇳🇫",
  "nigeria": "🇳🇬",
  "nicaragua": "🇳🇮",
  "netherlands": "🇳🇱",
  "norway": "🇳🇴",
  "nepal": "🇳🇵",
  "nauru": "🇳🇷",
  "niue": "🇳🇺",
  "new_zealand": "🇳🇿",
  "oman": "🇴🇲",
  "panama": "🇵🇦",
  "peru": "🇵🇪",
  "french_polynesia": "🇵🇫",
  "papua_new_guinea": "🇵🇬",
  "philippines": "🇵🇭",
  "pakistan": "🇵🇰",
  "poland": "🇵🇱",
  "st_pierre_miquelon": "🇵🇲",
  "pitcairn_islands": "🇵🇳",
  "puerto_rico": "🇵🇷",
  "palestinian_territories": "🇵🇸",
  "portugal": "🇵🇹",
  "palau": "🇵🇼",
  "paraguay": "🇵🇾",
  "qatar": "🇶🇦",
  "reunion": "🇷🇪",
  "romania": "🇷🇴",
  "serbia": "🇷🇸",
  "ru": "🇷🇺",
  "rwanda": "🇷🇼",
  "saudi_arabia": "🇸🇦",
  "solomon_islands": "🇸🇧",
  "seychelles": "🇸🇨",
  "sudan": "🇸🇩",
  "sweden": "🇸🇪",
  "singapore": "🇸🇬",
  "st_helena": "🇸🇭",
  "slovenia": "🇸🇮",
  "svalbard_jan_mayen": "🇸🇯",
  "slovakia": "🇸🇰",
  "sierra_leone": "🇸🇱",
  "san_marino": "🇸🇲",
  "senegal": "🇸🇳",
  "somalia": "🇸🇴",
  "suriname": "🇸🇷",
  "south_sudan": "🇸🇸",
  "sao_tome_principe": "🇸🇹",
  "el_salvador": "🇸🇻",
  "sint_maarten": "🇸🇽",
  "syria": "🇸🇾",
  "swaziland": "🇸🇿",
  "tristan_da_cunha": "🇹🇦",
  "turks_caicos_islands": "🇹🇨",
  "chad": "🇹🇩",
  "french_southern_territories": "🇹🇫",
  "togo": "🇹🇬",
  "thailand": "🇹🇭",
  "tajikistan": "🇹🇯",
  "tokelau": "🇹🇰",
  "timor_leste": "🇹🇱",
  "turkmenistan": "🇹🇲",
  "tunisia": "🇹🇳",
  "tonga": "🇹🇴",
  "tr": "🇹🇷",
  "trinidad_tobago": "🇹🇹",
  "tuvalu": "🇹🇻",
  "taiwan": "🇹🇼",
  "tanzania": "🇹🇿",
  "ukraine": "🇺🇦",
  "uganda": "🇺🇬",
  "us_outlying_islands": "🇺🇲",
  "united_nations": "🇺🇳",
  "us": "🇺🇸",
  "uruguay": "🇺🇾",
  "uzbekistan": "🇺🇿",
  "vatican_city": "🇻🇦",
  "st_vincent_grenadines": "🇻🇨",
  "venezuela": "🇻🇪",
  "british_virgin_islands": "🇻🇬",
  "us_virgin_islands": "🇻🇮",
  "vietnam": "🇻🇳",
  "vanuatu": "🇻🇺",
  "wallis_futuna": "🇼🇫",
  "samoa": "🇼🇸",
  "kosovo": "🇽🇰",
  "yemen": "🇾🇪",
  "mayotte": "🇾🇹",
  "south_africa": "🇿🇦",
  "zambia": "🇿🇲",
  "zimbabwe": "🇿🇼",
  "england": "🏴󠁧󠁢󠁥󠁮󠁧󠁿",
  "scotland": "🏴󠁧󠁢󠁳󠁣󠁴󠁿",
  "wales": "🏴󠁧󠁢󠁷󠁬󠁳󠁿"
}`);
function withEmoji(str) {
    return str.replace(/:(\w+(_\w+))*:/gi, (m, g1) => {
        var _a;
        return (_a = _emojiMap[g1]) !== null && _a !== void 0 ? _a : m;
    });
}
exports.withEmoji = withEmoji;


/***/ }),
/* 5 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IssueOpenIcon": () => (/* binding */ IssueOpenIcon),
/* harmony export */   "IssueClosedIcon": () => (/* binding */ IssueClosedIcon),
/* harmony export */   "PRIcon": () => (/* binding */ PRIcon)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/*---------------------------------------------------------
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *--------------------------------------------------------*/

const IssueOpenIcon = () => ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("svg", { className: "octicon octicon-issue-opened open", viewBox: "0 0 14 16", version: "1.1", width: "16", height: "16", "aria-hidden": "true" },
    (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("path", { "fill-rule": "evenodd", d: "M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 011.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z" })));
const IssueClosedIcon = () => ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("svg", { className: "octicon octicon-issue-closed closed", viewBox: "0 0 16 16", version: "1.1", width: "16", height: "16", "aria-hidden": "true" },
    (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("path", { "fill-rule": "evenodd", d: "M7 10h2v2H7v-2zm2-6H7v5h2V4zm1.5 1.5l-1 1L12 9l4-4.5-1-1L12 7l-1.5-1.5zM8 13.7A5.71 5.71 0 012.3 8c0-3.14 2.56-5.7 5.7-5.7 1.83 0 3.45.88 4.5 2.2l.92-.92A6.947 6.947 0 008 1C4.14 1 1 4.14 1 8s3.14 7 7 7 7-3.14 7-7l-1.52 1.52c-.66 2.41-2.86 4.19-5.48 4.19v-.01z" })));
const PRIcon = () => ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("svg", { className: "octicon octicon-git-merge merged", viewBox: "0 0 12 16", version: "1.1", width: "16", height: "16", "aria-hidden": "true" },
    (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("path", { "fill-rule": "evenodd", d: "M10 7c-.73 0-1.38.41-1.73 1.02V8C7.22 7.98 6 7.64 5.14 6.98c-.75-.58-1.5-1.61-1.89-2.44A1.993 1.993 0 002 .99C.89.99 0 1.89 0 3a2 2 0 001 1.72v6.56c-.59.35-1 .99-1 1.72 0 1.11.89 2 2 2a1.993 1.993 0 001-3.72V7.67c.67.7 1.44 1.27 2.3 1.69.86.42 2.03.63 2.97.64v-.02c.36.61 1 1.02 1.73 1.02 1.11 0 2-.89 2-2 0-1.11-.89-2-2-2zm-6.8 6c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm8 6c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z" })));


/***/ }),
/* 6 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (".item-row {\n\tpadding: 0.5em;\n\tcolor: var(--theme-foreground);\n}\n.item-row:hover {\n\tbackground-color: rgba(0, 0, 0, 0.1);\n}\n.item-main {\n\tdisplay: flex;\n\talign-items: center;\n}\n.title {\n\tcolor: var(--theme-foreground) !important;\n\tfont-size: 1.1em;\n\ttext-decoration: none;\n\tmargin-right: 3px;\n}\n.title:hover {\n\ttext-decoration: underline;\n}\n.title.repo {\n\topacity: 70%;\n\tpadding-right: 8px;\n}\n.label {\n\tfont-size: 0.85em;\n\tmargin: 0 2px;\n\tpadding: 1px 6px 2px 6px;\n\tborder-radius: 1em;\n}\n.label a {\n\t/* Prevents wrap breaking on hypen */\n\tdisplay: inline-block;\n}\n.status {\n\tdisplay: flex;\n\talign-items: center;\n\tfont-size: 0.8em;\n\topacity: 60%;\n\tpadding: 0.1em 0 0.1em 0.3em;\n}\n.assignee {\n\tflex: shrink;\n}\n.user {\n\tdisplay: flex;\n}\n.user img {\n\tpadding: 0 0.1em;\n}\n.item-state {\n\tpadding-right: 0.3em;\n\topacity: 60%;\n}\n.item-state .octicon {\n\tfill: var(--theme-foreground);\n\topacity: 0.7;\n\tdisplay: block;\n}\n.item-state .octicon.open {\n\tfill: green;\n\topacity: 1;\n}\n.stats {\n\ttext-align: center;\n\tfont-size: 0.7em;\n\topacity: 60%;\n\tpadding-top: 0.6em;\n}\n.collapse {\n\ttext-align: center;\n\tfont-size: 0.9em;\n\tcursor: pointer;\n\tpadding: 0.3em 0;\n}\n.collapse:hover > span,\n.collapse:focus > span {\n\tbackground: var(--theme-button-hover-background);\n}\n.collapse > span {\n\tcolor: var(--theme-button-foreground);\n\tbackground: var(--theme-button-background);\n\tpadding: 3px;\n}\n.item-row .start-working {\n\tdisplay: none;\n}\n.item-row .start-working a {\n\tcolor: var(--theme-foreground) !important;\n\tfont-size: 0.9em;\n\ttext-decoration: none;\n}\n.item-row .start-working a:hover {\n\ttext-decoration: underline;\n}\n.item-row:hover .start-working {\n\tdisplay: inline;\n}\n.item-row .actions {\n\tdisplay: none;\n\tmargin: 0;\n\tpadding: 0;\n}\n.item-row:hover .actions,\n.item-row:focus-within .actions {\n\tdisplay: flex;\n}\n.item-row .actions li {\n\tlist-style-type: none;\n\tpadding: 0;\n\tcursor: pointer;\n}\n\n.item-row .actions li a {\n\tcolor: inherit;\n}\n");

/***/ })
/******/ ]);
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		// no module.id needed
/******/ 		// no module.loaded needed
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__webpack_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "activate": () => (/* binding */ activate)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var _renderer_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/*---------------------------------------------------------
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *--------------------------------------------------------*/



const activate = () => {
    const style = document.createElement('style');
    style.type = 'text/css';
    style.textContent = _renderer_css__WEBPACK_IMPORTED_MODULE_2__.default;
    return {
        renderOutputItem(info, element) {
            let shadow = element.shadowRoot;
            if (!shadow) {
                shadow = element.attachShadow({ mode: 'open' });
                shadow.append(style.cloneNode(true));
                const root = document.createElement('div');
                root.id = 'root';
                shadow.append(root);
            }
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.render)((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(_renderer__WEBPACK_IMPORTED_MODULE_1__.AllItems, { items: info.json() }), shadow.querySelector('#root'));
        },
    };
};

})();

var __webpack_exports__activate = __webpack_exports__.activate;
export { __webpack_exports__activate as activate };

//# sourceMappingURL=renderer.js.map